<!--
  ~ Doms build framework version 1.0.14
  ~
  ~ $Id$
  ~ $Revision$
  ~ $Date$
  ~ $Author$
  ~
  ~ The DOMS project.
  ~ Copyright (C) 2007-2010  The State and University Library
  ~
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<project name="module">
    <import file="build-macros.xml"/>

    <!--These can be overriden in the module specific build file-->

    <dirset id="module.libs" dir="${basedir}/lib">
        <include name="**"/>
    </dirset>


    <dirset id="project.libs" dir="${global.dir}/lib">
        <exclude name="**"/>
    </dirset>


    <dirset id="module.dependencies" dir="${global.dir}/modules">
        <exclude name="**"/>
    </dirset>


    <dirset id="build.project.libs" dir="${global.dir}/lib">
        <exclude name="**"/>
    </dirset>


    <!--These are the standard targets-->
    <target name="clean">
        <delete dir="classes"/>
        <delete dir="*temp*"/>
        <delete dir="dist"/>
    </target>

    <target name="distclean" depends="clean">
        <!--
                <dependsloop target="distclean" dependencies="module.dependencies"/>
        -->
    </target>

    <target name="depends">
        <dependsloop target="all" dependencies="module.dependencies"/>
    </target>

    <target name="compile" depends="depends,compile.check"
            unless="codeNotChanged">
        <!--<echo message="Using doms buildframework version 1.0.6#SNAPSHOT"/>-->
        <!--This is the classpath calculation-->
        <convertPath dirset="module.libs"
                     postfix="/jars/*.jar"
                     newfileset="module.libs.jars"/>



        <convertPath dirset="project.libs"
                     postfix="/jars/*.jar"
                     newfileset="project.libs.jars"/>

        <convertPath dirset="module.dependencies"
                     postfix="/dist/**/*.jar"
                     newfileset="dependencies.jars"/>

        <convertPath dirset="build.project.libs"
                     postfix="/jars/**/*.jar"
                     newfileset="build.project.libs.jars"/>


        <path id="classpath">
            <fileset refid="module.libs.jars"/>
            <fileset refid="project.libs.jars"/>
            <fileset refid="dependencies.jars"/>
        </path>

        <path id="build.classpath">
            <path refid="classpath"/>
            <fileset refid="build.project.libs.jars"/>
        </path>


        <compile compile.classpath="build.classpath"/>
    </target>

    <target name="jar" depends="compile" unless="codeNotChanged">
        <buildjar jarfile="${jarfile}"/>
    </target>

    <target name="compile.check">
        <uptodate property="codeNotChanged" targetfile="dist/${jarfile}">
            <srcfiles dir="src">
                <include name="**/*"/>
            </srcfiles>
        </uptodate>
    </target>

    <target name="test"></target>

    <target name="sourcezip">
        <sourcezip srcpack.zip="${srcpack.zip}"/>
    </target>

    <target name="all" depends="sourcezip,jar">

    </target>


    <target name="_copyLibsForDist" depends="_copyLicensesForDist">


        <convertPath dirset="project.libs"
                     postfix="/jars/*.jar"
                     newfileset="project.libs.jars"/>

        <convertPath dirset="module.libs"
                        postfix="/jars/*.jar"
                        newfileset="module.libs.jars"/>


        <copy todir="${global.dir}/temp/usedlibs" overwrite="false">
            <fileset refid="project.libs.jars"/>
                        <fileset refid="module.libs.jars"/>
        </copy>
    </target>

    <target name="_copyLicensesForDist">
        <convertPath dirset="project.libs"
                     postfix="/license/*"
                     newfileset="project.libs.license"/>

        <convertPath dirset="module.libs"
                     postfix="/license/*"
                     newfileset="module.libs.license"/>


        <copy todir="${global.dir}/temp/usedlibs" overwrite="false">
            <fileset refid="project.libs.license"/>
            <fileset refid="module.libs.license"/>
        </copy>

    </target>

</project>