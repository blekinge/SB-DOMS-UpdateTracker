<!--
  ~ Doms build framework version 1.0.15
  ~
  ~ $Id$
  ~ $Revision$
  ~ $Date$
  ~ $Author$
  ~
  ~ The DOMS project.
  ~ Copyright (C) 2007-2010  The State and University Library
  ~
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<project name="project">

    <property name="global.dir" value="${basedir}/.."/>

    <import file="build-macros.xml"/>

    <property name="dist.name" value="${ant.project.name}-${version}"/>
    <property name="dist.zip" value="${dist.name}.zip"/>
    <property name="dist.src.zip" value="${dist.name}-src.zip"/>
    <property name="dist.bin.zip" value="${dist.name}-bin.zip"/>
    <property name="dist.doc.zip" value="${dist.name}-doc.zip"/>


    <dirset id="project.modules" dir="${global.dir}/modules">
        <include name="*"/>
        <include name="*/*"/>
    </dirset>

    <target name="clean">
        <delete dir="dist"/>
        <delete dir="temp"/>
        <dependsloop target="clean" dependencies="project.modules"/>
    </target>


    <target name="distclean" depends="clean">
        <dependsloop target="distclean" dependencies="project.modules"/>

    </target>

    <target name="compile">
        <dependsloop target="compile" dependencies="project.modules"/>
    </target>

    <target name="test">
        <!--TODO real tests-->
        <dependsloop target="compile" dependencies="project.modules"/>
    </target>


    <target name="release.doc">
        <mkdir dir="temp/docstemp"/>
        <mkdir dir="dist"/>
        <path id="build.classpath">
            <fileset dir="${global.dir}/lib">
                <include name="**/*.jar"/>
            </fileset>
        </path>

        <convertPath dirset="project.modules" postfix="/src/**/*.java"
                     newfileset="project.modules.javafiles"/>
        <convertPath dirset="project.modules" postfix="/tempsrc/**/*.java"
                     newfileset="project.modules.javatempfiles"/>

        <javadoc destdir="temp/docstemp" classpathref="build.classpath">
            <sourcefiles>
                <fileset refid="project.modules.javafiles"/>
                <fileset refid="project.modules.javatempfiles"/>
            </sourcefiles>
        </javadoc>
        <zip destfile="dist/${dist.doc.zip}">
            <zipfileset dir="temp/docstemp" prefix="${dist.name}">
                <include name="**/*"/>
            </zipfileset>
        </zip>
        <delete dir="temp/docstemp"/>
    </target>

    <target name="release.bin">

        <mkdir dir="dist"/>

        <mkdir dir="temp/libtemp"/>
        <mkdir dir="temp/licensestemp"/>
        <mkdir dir="temp/usedlibs"/>
        <mkdir dir="temp/datatemp"/>
        <mkdir dir="temp/packagetemp"/>
        <!--
                <mkdir dir="temp/wartemp"/>
        -->

        <dependsloop target="all" dependencies="project.modules"/>
        <!--Collect the used project libs from all the ordinary modules -->
        <dependsloop target="_copyLibsForDist" dependencies="project.modules"/>

        <!--The list of produced jars-->
        <convertPath dirset="project.modules"
                     postfix="/dist/**/*.jar"
                     newfileset="project.modules.jars"/>

        <!--The list of produces wars-->
        <convertPath dirset="project.modules"
                     postfix="/dist/**/*.war"
                     newfileset="project.modules.wars"/>

        <!--The list of produces executables-->
        <convertPath dirset="project.modules"
                     postfix="/dist/**/*-bin.zip"
                     newfileset="project.modules.packages"/>

        <!--The list of licenses from the individual modules-->
        <convertPath dirset="project.modules"
                     postfix="**/license/*"
                     newfileset="project.modules.licenses"/>

        <!--The list of licenses from the individual modules-->
        <convertPath dirset="project.modules"
                     postfix="**/data/*"
                     newfileset="project.modules.data"/>

        <copy todir="temp/libtemp" flatten="true" failonerror="false">
            <fileset dir="temp/usedlibs">
                <include name="**/jars/*.jar"/>
            </fileset>
            <fileset refid="project.modules.jars"/>
        </copy>

        <copy todir="temp/wartemp" flatten="true" failonerror="false">
            <fileset refid="project.modules.wars"/>
        </copy>

        <copy todir="temp/packagetemp" flatten="true" failonerror="false">
            <fileset refid="project.modules.packages"/>
        </copy>

        <copy todir="temp/licensestemp">
            <fileset refid="project.modules.licenses"/>
            <fileset dir="temp/usedlibs/">
                <include name="**/license/*"/>
            </fileset>
            <regexpmapper from="(.*)/license(/.*)" to="\1\2"/>
        </copy>

        <copy todir="temp/datatemp">
            <fileset refid="project.modules.data"/>
            <regexpmapper from="(.*)/data(/.*)" to="\1\2"/>
        </copy>



        <zip destfile="dist/${dist.bin.zip}">
            <zipfileset prefix="${dist.name}/jars" dir="temp/libtemp"/>
            <zipfileset prefix="${dist.name}/wars" dir="temp/wartemp" erroronmissingdir="false"/>
            <zipfileset prefix="${dist.name}/packages" dir="temp/packagetemp" erroronmissingdir="false"/>
            <zipfileset prefix="${dist.name}/license" dir="temp/licensestemp"/>
            <zipfileset prefix="${dist.name}/license" dir="${global.dir}">
                <include name="LICENSE"/>
                <include name="NOTICE"/>
            </zipfileset>
            <zipfileset prefix="${dist.name}" dir="${global.dir}">
                <include name="README"/>
            </zipfileset>
            <zipfileset prefix="${dist.name}/data" dir="temp/datatemp"/>
        </zip>

        <delete dir="temp/libtemp"/>
        <delete dir="temp/licensestemp"/>
        <delete dir="temp/usedlibs"/>
        <delete dir="temp/datatemp"/>
        <delete dir="temp/wartemp"/>
        <delete dir="temp/packagetemp"/>

    </target>



    <target name="release.src" depends="distclean">
        <mkdir dir="${global.dir}/dist"/>


        <zip destfile="dist/${dist.src.zip}">
            <zipfileset prefix="${dist.name}" dir=".">
                <include name="**/*"/>
                <exclude name="out/**"/>
            </zipfileset>
        </zip>

        <dependsloop target="sourcezip" dependencies="project.modules"/>
        <copy todir="dist">
            <fileset dir="${global.dir}/modules">
                <include name="**/dist/**/*src.zip"/>
            </fileset>
            <chainedmapper>
                <flattenmapper/>
<!--
                <mapper type="glob" from="*-src.zip" to="*-${version}-src.zip"/>
-->
            </chainedmapper>
        </copy>

    </target>

    <target name="release" depends="release.src,release.bin,release.doc">
        <zip destfile="dist/${dist.zip}">
            <zipgroupfileset file="dist/${dist.bin.zip}"/>
            <zipfileset dir="dist" prefix="${dist.name}/src">
                <include name="*-src.zip"/>
                <exclude name="${dist.src.zip}"/>
            </zipfileset>
            <zipfileset file="dist/${dist.doc.zip}"
                        prefix="${dist.name}/apidocs"/>
        </zip>
    </target>

</project>