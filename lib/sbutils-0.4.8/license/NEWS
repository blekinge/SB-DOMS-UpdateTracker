=========================
2009-09-24: SB Util 0.4.7
=========================

 * Optimization: The namespace ignoring fast path was not always enabled
                 in the XSLT module

 * Bugfix/feature : The CachedCollator did not sort as expected on strings
                    containing whitespaces. Whitespaces where simply stripped
                    from the string under comparisons. Fx. this would be an
                    ordering:
                      - dinocar
                      - dino monster
                      - dinosaur
                    Some languages prefer to honor the space and sort like:
                      - dino monster
                      - dinocar
                      - dinosaur
                    CachedCollator now supports both sort styles

=========================
2009-09-24: SB Util 0.4.7
=========================

 * Include a new Bytes utility class, for now only containing a single
   method toHex(byte[]) that returns a hex-string representation of a
   byte array. Very useful for creating strings from md5 checksums (see
   the Checksums class)

 * Include a new Reader class in the xml package, NamespaceRemover, that
   strips XML namespacing from a stream. The NamespaceRemover class is a
   subclass of the ReplaceReader class from the reader package

 * Roughly 2x speedups of namespace ignoring XSLT transformations when using
   the XSLT.transform() methods (this is achieved by using the new
   NamespaceRemover mentioned above)

 * New functionality in the Strings class:

   - asCharSequence(char[]) wraps a char array as a
     CharSequence in a no-copy manner

   - indexOf(char, CharSequence) like the normal String method, but works on
     any CharSequence

=========================
2009-08-03: SB Util 0.4.6
=========================

 * Feature: Add a binaryLineSearch() method to LineReader

=========================
2009-04-28: SB Util 0.4.5
=========================

 * Add a Table class in the console package that can be used to do formatted
   tabular layout of data to the console (or more generally to Appendables,
   like System.out and StringBuilder)

 * Add overloaded methods DOM.streamToDOM() and DOM.stringToDOM() that takes
   an additional boolean determining whether or not namespaces should be
   reflected in the DOM (default is no)

 * Implement a namespace aware framework for doing XPath selects. It revolves
   around the XPathSelector interface. Instances of XPathSelectors can be
   created via the statis factory DOM.createXPathSelector.

 * Include a simple default implementation of the NamespaceContext interface
   in the xml package

 * Bugfix: Fix the 'test' target completing without the 'release' target
           being run first

 * Bugfix: When using rules with targets longer than 10 characters
           together with ReplaceFactory and Streams, the rules were not
           honored

=========================
2009-04-02: SB Util 0.4.4
=========================

 * Make ReplaceReader clonable. This facilitates an optimized construction
   strategy in ReplaceFactory: If you create an instance of a ReplaceFactory
   and call getReplacer() on it you merely create clones of an already
   constructed replacer. This is much faster since it avoids the rule parsing
   step as well as memory allocations

 * You can now log errors from XSLT processing by creating an appender
   for 'dk.statsbiblioteket.util.xml.XSLT#warnings'

 * Add convenience method DOM.selectInteger()

 * Added constructor to XProperties that throws an exception if the wanted
   resource could not be located

 * Upgrade internal commons-logging to 1.1.1

 * No bugs fixed! We found none!

=========================
2009-03-18: SB Util 0.4.3
=========================

 * Add methods to the XSLT utilities enabling namespace-ignoring
   transformations. Use at your own peril :-)

 * Bug fixes: Lots of edge cases with empty streams and buffers fixed

 * Bug fix: Before 0.4.0 CircularCharBuffer.take() was changed to raise
   a NoSuchElementException. This was not reflected everywhere in the code
   using it - still expecting a ArrayIndexOutOfBoundsException

=========================
2009-03-17: SB Util 0.4.2
=========================

 * Bugfix: setSource did not work for StringReplacer and
   CharReplacer 

 * Small optimization in the way paramters are handled when applying XSLTs

=========================
2009-03-17: SB Util 0.4.1
=========================

 * Critical bugfix: The StringReplacer lost the final character on
   input of length 11 or more

=========================
2009-03-16: SB Util 0.4.0
=========================

 * Introduce a new 'reader' package with a set of handy Readers

   - CharSequenceReader a reader that can read from anything implementing the
     CharSequence interface. This includes important classes such as
     StringBuilder and StringBuffer, not to mention SB Util's own
     CircularCharBuffer

   - ReplaceReaders a new abstract class for readers that substitute substrings
     on the fly while reading. There is included a factory for selecting an
     appropriate optimized impl. class among one of

       o CharReplacer
       o CharArrayReplacer
       o StringReplacer

 * Add CircularCharBuffer which is a memory efficient way of buffering
   character data in a queue/reader like manner

 * Add TextTransformer interface (implemented by ReplaceReaders)

 * Add a StaticConnectionFactory for the rpc package. It is used to do
   "local rpc" ie. the connection factory simply returns a given Java object,
   effectively dispatching method calls to a local object

 * Introduce a new collection of XML utilities in the 'xml' package. The intent
   of this new package is not to provide hardcore XML handling capabilities,
   but providing a set of *thread safe* convenience functions that provide
   good performance by using caching tricks and what not:

   - DOM, a collection of DOM manipulation utilities, also with an XPath
     selection API

   - XMLUtil with a method for xml-escaping a string, and probably more to
     come in later versions of sbutil

   - XSLT with methods for easy XSLT processing
